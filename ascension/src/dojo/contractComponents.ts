/* Autogenerated file. Do not edit manually. */

import { defineComponent, Type as RecsType, World } from "@dojoengine/recs";

export function defineContractComponents(world: World) {
  return {
	  ActionPoint: (() => {
	    return defineComponent(
	      world,
	      { id: RecsType.Number, game_id: RecsType.BigInt, value: RecsType.Number },
	      {
	        metadata: {
	          name: "ActionPoint",
	          types: ["u8","felt252","u8"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  Alive: (() => {
	    return defineComponent(
	      world,
	      { player: RecsType.BigInt, value: RecsType.Boolean },
	      {
	        metadata: {
	          name: "Alive",
	          types: ["contractaddress","bool"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  ClaimInterval: (() => {
	    return defineComponent(
	      world,
	      { player: RecsType.BigInt, value: RecsType.Number },
	      {
	        metadata: {
	          name: "ClaimInterval",
	          types: ["contractaddress","u32"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  GameData: (() => {
	    return defineComponent(
	      world,
	      { game: RecsType.BigInt, board_width: RecsType.Number, board_height: RecsType.Number, number_of_players: RecsType.Number, available_ids: RecsType.BigInt },
	      {
	        metadata: {
	          name: "GameData",
	          types: ["felt252","u32","u32","u8","u256"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  GameSession: (() => {
	    return defineComponent(
	      world,
	      { id: RecsType.BigInt, isLive: RecsType.Boolean, startTime: RecsType.BigInt, gameId: RecsType.BigInt, players: RecsType.Number, isWon: RecsType.Boolean },
	      {
	        metadata: {
	          name: "GameSession",
	          types: ["felt252","bool","felt252","felt252","u8","bool"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  Health: (() => {
	    return defineComponent(
	      world,
	      { player: RecsType.BigInt, value: RecsType.Number },
	      {
	        metadata: {
	          name: "Health",
	          types: ["contractaddress","u8"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  InGame: (() => {
	    return defineComponent(
	      world,
	      { player: RecsType.BigInt, gameId: RecsType.BigInt },
	      {
	        metadata: {
	          name: "InGame",
	          types: ["contractaddress","felt252"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  LastActionPointClaim: (() => {
	    return defineComponent(
	      world,
	      { player: RecsType.BigInt, value: RecsType.Number },
	      {
	        metadata: {
	          name: "LastActionPointClaim",
	          types: ["contractaddress","u32"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  LastVotingPointClaim: (() => {
	    return defineComponent(
	      world,
	      { player: RecsType.BigInt, value: RecsType.Number },
	      {
	        metadata: {
	          name: "LastVotingPointClaim",
	          types: ["contractaddress","u32"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  Player: (() => {
	    return defineComponent(
	      world,
	      { player: RecsType.BigInt, gameId: RecsType.BigInt },
	      {
	        metadata: {
	          name: "Player",
	          types: ["contractaddress","felt252"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  PlayerAddress: (() => {
	    return defineComponent(
	      world,
	      { id: RecsType.Number, player: RecsType.BigInt },
	      {
	        metadata: {
	          name: "PlayerAddress",
	          types: ["u8","contractaddress"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  PlayerAtPosition: (() => {
	    return defineComponent(
	      world,
	      { x: RecsType.Number, y: RecsType.Number, game_id: RecsType.BigInt, id: RecsType.Number },
	      {
	        metadata: {
	          name: "PlayerAtPosition",
	          types: ["u8","u8","felt252","u8"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  PlayerId: (() => {
	    return defineComponent(
	      world,
	      { player: RecsType.BigInt, id: RecsType.Number },
	      {
	        metadata: {
	          name: "PlayerId",
	          types: ["contractaddress","u8"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  Position: (() => {
	    return defineComponent(
	      world,
	      { id: RecsType.Number, game_id: RecsType.BigInt, x: RecsType.Number, y: RecsType.Number },
	      {
	        metadata: {
	          name: "Position",
	          types: ["u8","felt252","u8","u8"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  Range: (() => {
	    return defineComponent(
	      world,
	      { player: RecsType.BigInt, value: RecsType.Number },
	      {
	        metadata: {
	          name: "Range",
	          types: ["contractaddress","u32"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  Square: (() => {
	    return defineComponent(
	      world,
	      { x: RecsType.Number, y: RecsType.Number, game_id: RecsType.BigInt, piece: RecsType.Number },
	      {
	        metadata: {
	          name: "Square",
	          types: ["u8","u8","felt252","enum"],
	          customTypes: ["PieceType"],
	        },
	      }
	    );
	  })(),
	  Username: (() => {
	    return defineComponent(
	      world,
	      { id: RecsType.Number, value: RecsType.BigInt },
	      {
	        metadata: {
	          name: "Username",
	          types: ["u8","felt252"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  VotingPoint: (() => {
	    return defineComponent(
	      world,
	      { player: RecsType.BigInt, value: RecsType.Number },
	      {
	        metadata: {
	          name: "VotingPoint",
	          types: ["contractaddress","u8"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  PlayerSpawned: (() => {
		return defineComponent(
		  world,
		  {
			timestamp: RecsType.BigInt,
			position: { x: RecsType.Number, y: RecsType.Number },
			gameId: RecsType.BigInt,
			player: RecsType.String,
		  },
		  {
			metadata: {
			  name: "PlayerSpawned",
			  types: ["felt252", "u32", "u32", "felt252", "felt252"],
			  customTypes: ["Vec2"],
			},
		  }
		);
	  })(),
	  GameStarted: (() => {
		return defineComponent(
		  world,
		  { startTime: RecsType.BigInt, gameId: RecsType.BigInt },
		  {
			metadata: {
			  name: "GameStarted",
			  types: ["felt252", "felt252"],
			  customTypes: [],
			},
		  }
		);
	  })(),
  };
}
